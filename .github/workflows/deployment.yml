name: Dockerize and Deployment

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          pipx install poetry

      - name: Install dependencies
        run: |
          poetry install --with dev --no-interaction --no-root

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Show disk usage before cleanup
        run: df -h

      - name: Remove unused Docker data
        run: docker system prune --all --force --volumes

      - name: Clean up system
        run: |
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          sudo rm -rf /tmp/*
          sudo rm -rf /var/tmp/*
          sudo rm -rf ~/.cache/pypoetry
          sudo rm -rf /root/.cache/pypoetry

      - name: Show disk usage after cleanup
        run: df -h

      - name: Start Application Stack
        run: docker-compose up -d

      - name: Build Docker Images
        run: docker-compose -f docker-compose.yml build --no-cache

      - name: Push Docker Images to Registry
        run: docker-compose -f docker-compose.yml push

      - name: Deploy Backend 
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_BACKEND_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-success: true

      - name: Deploy Frontend 
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_FRONTEND_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-success: true
